name: Deploy NextJS to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.0.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.11.1

    - name: Log in to Container Registry
      uses: docker/login-action@v3.5.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5.8.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6.18.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5.0.0

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script_stop: true
        script: |
          # Переход в директорию NextJS проекта
          cd ${{ secrets.NEXTJS_PROJECT_PATH }}

          # Остановка текущих контейнеров
          docker-compose -f docker-compose.prod.yml down

          # Получение обновлений
          git pull origin main

          # Логин в GitHub Container Registry
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          # Загрузка нового образа
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          # Запуск контейнеров с новым образом
          docker-compose -f docker-compose.prod.yml up -d

          # Очистка старых образов
          docker image prune -f

          # Проверка статуса
          docker-compose -f docker-compose.prod.yml ps
